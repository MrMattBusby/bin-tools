#!/bin/bash
PURPOSE="Backup current distro essentials."
#
#   Copyright (c) 2015-2016, Matt Busby @MrMattBusby.
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions
#   are met:
#   
#   1. Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#   
#   2. Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#   
#   3. Neither the name of the copyright holder nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#   
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#   FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#   COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#   LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
#   WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.

CMDNAME="$0"
USAGE="${CMDNAME}"
HELP="${PURPOSE}\nUsage: \`${USAGE}\`"
BRED='\e[1;31m'
SDARK='\e[2m'
NC='\e[0m'

if [ "$1" == '-h' ] ; then
  >&2 echo -e "${HELP}"
	exit 0
elif [ $# -ne 0 ] ; then
  >&2 echo -e "${BRED}${CMDNAME}: error: ${NC}Invalid arguments!\n"
  >&2 echo -e "${SDARK}${HELP}${NC}"
	exit 2
fi

echo "backup: Ensure you have saved off all date from ~/<proj_num> as well as any unsaved/unknown or modified data under ~/svn or ~/git!!!"

pushd ~ > /dev/null

BNAME="VM_Backup_$(date +%F)"

echo "backup: Running for file '${BNAME}.tgz'..."

# Make a backup directory or use current
mkdir "$BNAME"

# Copy files/folders
STUFF=(
/etc/hosts
/etc/group
/etc/sim*
./code
)
# Depricated
#"/var/log/yum*"
#"./.pip/pip.log"

for each in "${STUFF[@]}" ; do
  sudo cp -rpfL $each "$BNAME"
done

# Save YUM list
#yumdb search reason user > ~/"$BNAME"/yumdb.txt
# Save DNF list
sudo dnf history userinstalled > ~/"$BNAME"/dnf_hist.txt

# Save python PIP list
deactivate 2> /dev/null # Close any virt envs
pip freeze > ./"$BNAME"/pip_freeze.txt

# Save python pxg list
\ls /usr/lib/python2.7/site-packages > ~/"$BNAME"/python27_pxgs_ls.txt
\ls /usr/lib/python2.8/site-packages > ~/"$BNAME"/python28_pxgs_ls.txt
\ls /usr/lib/python3.3/site-packages > ~/"$BNAME"/python33_pxgs_ls.txt
\ls /usr/lib/python3.4/site-packages > ~/"$BNAME"/python34_pxgs_ls.txt
\ls /usr/lib/python3.5/site-packages > ~/"$BNAME"/python35_pxgs_ls.txt

# Save Git tree
mkdir -p git
pushd git > /dev/null

tree -dL 4 > ~/"$BNAME"/git_treed.txt

popd > /dev/null

# Save SVN tree
mkdir -p svn
pushd svn > /dev/null

\tree -dL 4 > ~/"$BNAME"/svn_treed.txt

popd > /dev/null

# Create tarball
\tar -czf "$BNAME".tgz "$BNAME"

# Remove dir
sudo rm -rf "$BNAME"

# Copy to shared
if [ -d /mnt/hgfs/Shared ] ; then
	\cp -p "$BNAME".tgz /mnt/hgfs/Shared/
fi
if [ -d /mnt/hgfs/Share ] ; then
	\cp -p "$BNAME".tgz /mnt/hgfs/Share/
fi

# Move to tmp
\mv "$BNAME".tgz /tmp/

popd > /dev/null

echo "backup: Done."
